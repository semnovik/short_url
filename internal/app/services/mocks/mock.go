// Code generated by MockGen. DO NOT EDIT.
// Source: services.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockShorterService is a mock of ShorterService interface.
type MockShorterService struct {
	ctrl     *gomock.Controller
	recorder *MockShorterServiceMockRecorder
}

// MockShorterServiceMockRecorder is the mock recorder for MockShorterService.
type MockShorterServiceMockRecorder struct {
	mock *MockShorterService
}

// NewMockShorterService creates a new mock instance.
func NewMockShorterService(ctrl *gomock.Controller) *MockShorterService {
	mock := &MockShorterService{ctrl: ctrl}
	mock.recorder = &MockShorterServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShorterService) EXPECT() *MockShorterServiceMockRecorder {
	return m.recorder
}

// GetURLByID mocks base method.
func (m *MockShorterService) GetURLByID(urlID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURLByID", urlID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURLByID indicates an expected call of GetURLByID.
func (mr *MockShorterServiceMockRecorder) GetURLByID(urlID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURLByID", reflect.TypeOf((*MockShorterService)(nil).GetURLByID), urlID)
}

// PostURL mocks base method.
func (m *MockShorterService) PostURL(url string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostURL", url)
	ret0, _ := ret[0].(string)
	return ret0
}

// PostURL indicates an expected call of PostURL.
func (mr *MockShorterServiceMockRecorder) PostURL(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostURL", reflect.TypeOf((*MockShorterService)(nil).PostURL), url)
}
