// Code generated by MockGen. DO NOT EDIT.
// Source: shorter.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockShorter is a mock of Shorter interface.
type MockShorter struct {
	ctrl     *gomock.Controller
	recorder *MockShorterMockRecorder
}

// MockShorterMockRecorder is the mock recorder for MockShorter.
type MockShorterMockRecorder struct {
	mock *MockShorter
}

// NewMockShorter creates a new mock instance.
func NewMockShorter(ctrl *gomock.Controller) *MockShorter {
	mock := &MockShorter{ctrl: ctrl}
	mock.recorder = &MockShorterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShorter) EXPECT() *MockShorterMockRecorder {
	return m.recorder
}

// GetURLByID mocks base method.
func (m *MockShorter) GetURLByID(urlID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURLByID", urlID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURLByID indicates an expected call of GetURLByID.
func (mr *MockShorterMockRecorder) GetURLByID(urlID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURLByID", reflect.TypeOf((*MockShorter)(nil).GetURLByID), urlID)
}

// PostURL mocks base method.
func (m *MockShorter) PostURL(url string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostURL", url)
	ret0, _ := ret[0].(string)
	return ret0
}

// PostURL indicates an expected call of PostURL.
func (mr *MockShorterMockRecorder) PostURL(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostURL", reflect.TypeOf((*MockShorter)(nil).PostURL), url)
}
